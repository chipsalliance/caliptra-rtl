
// This file was autogenerated by PeakRDL-uvm
package doe_reg_uvm;
    `include "uvm_macros.svh"
    import uvm_pkg::*;
    
    // Reg - doe_reg::DOE_IV
    class doe_reg__DOE_IV extends uvm_reg;
        rand uvm_reg_field IV;

        function new(string name = "doe_reg__DOE_IV");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.IV = new("IV");
            this.IV.configure(this, 32, 0, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__DOE_IV

    // Reg - doe_reg::DOE_CTRL
    class doe_reg__DOE_CTRL extends uvm_reg;
        rand uvm_reg_field CMD;
        rand uvm_reg_field DEST;

        function new(string name = "doe_reg__DOE_CTRL");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.CMD = new("CMD");
            this.CMD.configure(this, 2, 0, "RW", 1, 'h0, 1, 1, 0);
            this.DEST = new("DEST");
            this.DEST.configure(this, 5, 2, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__DOE_CTRL

    // Reg - doe_reg::DOE_STATUS
    class doe_reg__DOE_STATUS extends uvm_reg;
        rand uvm_reg_field READY;
        rand uvm_reg_field VALID;
        rand uvm_reg_field UDS_FLOW_DONE;
        rand uvm_reg_field FE_FLOW_DONE;
        rand uvm_reg_field DEOBF_SECRETS_CLEARED;

        function new(string name = "doe_reg__DOE_STATUS");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.READY = new("READY");
            this.READY.configure(this, 1, 0, "RO", 1, 'h0, 1, 1, 0);
            this.VALID = new("VALID");
            this.VALID.configure(this, 1, 1, "RO", 1, 'h0, 1, 1, 0);
            this.UDS_FLOW_DONE = new("UDS_FLOW_DONE");
            this.UDS_FLOW_DONE.configure(this, 1, 2, "RO", 1, 'h0, 1, 1, 0);
            this.FE_FLOW_DONE = new("FE_FLOW_DONE");
            this.FE_FLOW_DONE.configure(this, 1, 3, "RO", 1, 'h0, 1, 1, 0);
            this.DEOBF_SECRETS_CLEARED = new("DEOBF_SECRETS_CLEARED");
            this.DEOBF_SECRETS_CLEARED.configure(this, 1, 4, "RO", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__DOE_STATUS

    // Reg - doe_reg::global_intr_en_t
    class doe_reg__global_intr_en_t extends uvm_reg;
        rand uvm_reg_field error_en;
        rand uvm_reg_field notif_en;

        function new(string name = "doe_reg__global_intr_en_t");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.error_en = new("error_en");
            this.error_en.configure(this, 1, 0, "RW", 0, 'h0, 1, 1, 0);
            this.notif_en = new("notif_en");
            this.notif_en.configure(this, 1, 1, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__global_intr_en_t

    // Reg - doe_reg::error_intr_en_t
    class doe_reg__error_intr_en_t extends uvm_reg;
        rand uvm_reg_field error0_en;
        rand uvm_reg_field error1_en;
        rand uvm_reg_field error2_en;
        rand uvm_reg_field error3_en;

        function new(string name = "doe_reg__error_intr_en_t");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.error0_en = new("error0_en");
            this.error0_en.configure(this, 1, 0, "RW", 0, 'h0, 1, 1, 0);
            this.error1_en = new("error1_en");
            this.error1_en.configure(this, 1, 1, "RW", 0, 'h0, 1, 1, 0);
            this.error2_en = new("error2_en");
            this.error2_en.configure(this, 1, 2, "RW", 0, 'h0, 1, 1, 0);
            this.error3_en = new("error3_en");
            this.error3_en.configure(this, 1, 3, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__error_intr_en_t

    // Reg - doe_reg::notif_intr_en_t
    class doe_reg__notif_intr_en_t extends uvm_reg;
        rand uvm_reg_field notif_cmd_done_en;

        function new(string name = "doe_reg__notif_intr_en_t");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.notif_cmd_done_en = new("notif_cmd_done_en");
            this.notif_cmd_done_en.configure(this, 1, 0, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__notif_intr_en_t

    // Reg - doe_reg::global_intr_t_agg_sts_dd3dcf0a
    class doe_reg__global_intr_t_agg_sts_dd3dcf0a extends uvm_reg;
        rand uvm_reg_field agg_sts;

        function new(string name = "doe_reg__global_intr_t_agg_sts_dd3dcf0a");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.agg_sts = new("agg_sts");
            this.agg_sts.configure(this, 1, 0, "RO", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__global_intr_t_agg_sts_dd3dcf0a

    // Reg - doe_reg::global_intr_t_agg_sts_e6399b4a
    class doe_reg__global_intr_t_agg_sts_e6399b4a extends uvm_reg;
        rand uvm_reg_field agg_sts;

        function new(string name = "doe_reg__global_intr_t_agg_sts_e6399b4a");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.agg_sts = new("agg_sts");
            this.agg_sts.configure(this, 1, 0, "RO", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__global_intr_t_agg_sts_e6399b4a

    // Reg - doe_reg::error_intr_t_error0_sts_5ee134bf_error1_sts_aad9583f_error2_sts_6cad4575_error3_sts_735bbeba
    class doe_reg__error_intr_t_error0_sts_5ee134bf_error1_sts_aad9583f_error2_sts_6cad4575_error3_sts_735bbeba extends uvm_reg;
        rand uvm_reg_field error0_sts;
        rand uvm_reg_field error1_sts;
        rand uvm_reg_field error2_sts;
        rand uvm_reg_field error3_sts;

        function new(string name = "doe_reg__error_intr_t_error0_sts_5ee134bf_error1_sts_aad9583f_error2_sts_6cad4575_error3_sts_735bbeba");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.error0_sts = new("error0_sts");
            this.error0_sts.configure(this, 1, 0, "W1C", 1, 'h0, 1, 1, 0);
            this.error1_sts = new("error1_sts");
            this.error1_sts.configure(this, 1, 1, "W1C", 1, 'h0, 1, 1, 0);
            this.error2_sts = new("error2_sts");
            this.error2_sts.configure(this, 1, 2, "W1C", 1, 'h0, 1, 1, 0);
            this.error3_sts = new("error3_sts");
            this.error3_sts.configure(this, 1, 3, "W1C", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__error_intr_t_error0_sts_5ee134bf_error1_sts_aad9583f_error2_sts_6cad4575_error3_sts_735bbeba

    // Reg - doe_reg::notif_intr_t_notif_cmd_done_sts_1c68637e
    class doe_reg__notif_intr_t_notif_cmd_done_sts_1c68637e extends uvm_reg;
        rand uvm_reg_field notif_cmd_done_sts;

        function new(string name = "doe_reg__notif_intr_t_notif_cmd_done_sts_1c68637e");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.notif_cmd_done_sts = new("notif_cmd_done_sts");
            this.notif_cmd_done_sts.configure(this, 1, 0, "W1C", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__notif_intr_t_notif_cmd_done_sts_1c68637e

    // Reg - doe_reg::error_intr_trig_t
    class doe_reg__error_intr_trig_t extends uvm_reg;
        rand uvm_reg_field error0_trig;
        rand uvm_reg_field error1_trig;
        rand uvm_reg_field error2_trig;
        rand uvm_reg_field error3_trig;

        function new(string name = "doe_reg__error_intr_trig_t");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.error0_trig = new("error0_trig");
            this.error0_trig.configure(this, 1, 0, "W1S", 0, 'h0, 1, 1, 0);
            this.error1_trig = new("error1_trig");
            this.error1_trig.configure(this, 1, 1, "W1S", 0, 'h0, 1, 1, 0);
            this.error2_trig = new("error2_trig");
            this.error2_trig.configure(this, 1, 2, "W1S", 0, 'h0, 1, 1, 0);
            this.error3_trig = new("error3_trig");
            this.error3_trig.configure(this, 1, 3, "W1S", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__error_intr_trig_t

    // Reg - doe_reg::notif_intr_trig_t
    class doe_reg__notif_intr_trig_t extends uvm_reg;
        rand uvm_reg_field notif_cmd_done_trig;

        function new(string name = "doe_reg__notif_intr_trig_t");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.notif_cmd_done_trig = new("notif_cmd_done_trig");
            this.notif_cmd_done_trig.configure(this, 1, 0, "W1S", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__notif_intr_trig_t

    // Reg - doe_reg::intr_count_t_cnt_130ab269
    class doe_reg__intr_count_t_cnt_130ab269 extends uvm_reg;
        rand uvm_reg_field cnt;

        function new(string name = "doe_reg__intr_count_t_cnt_130ab269");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.cnt = new("cnt");
            this.cnt.configure(this, 32, 0, "RW", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__intr_count_t_cnt_130ab269

    // Reg - doe_reg::intr_count_t_cnt_324dfc53
    class doe_reg__intr_count_t_cnt_324dfc53 extends uvm_reg;
        rand uvm_reg_field cnt;

        function new(string name = "doe_reg__intr_count_t_cnt_324dfc53");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.cnt = new("cnt");
            this.cnt.configure(this, 32, 0, "RW", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__intr_count_t_cnt_324dfc53

    // Reg - doe_reg::intr_count_t_cnt_791a4799
    class doe_reg__intr_count_t_cnt_791a4799 extends uvm_reg;
        rand uvm_reg_field cnt;

        function new(string name = "doe_reg__intr_count_t_cnt_791a4799");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.cnt = new("cnt");
            this.cnt.configure(this, 32, 0, "RW", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__intr_count_t_cnt_791a4799

    // Reg - doe_reg::intr_count_t_cnt_e9de7334
    class doe_reg__intr_count_t_cnt_e9de7334 extends uvm_reg;
        rand uvm_reg_field cnt;

        function new(string name = "doe_reg__intr_count_t_cnt_e9de7334");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.cnt = new("cnt");
            this.cnt.configure(this, 32, 0, "RW", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__intr_count_t_cnt_e9de7334

    // Reg - doe_reg::intr_count_t_cnt_be67d6d5
    class doe_reg__intr_count_t_cnt_be67d6d5 extends uvm_reg;
        rand uvm_reg_field cnt;

        function new(string name = "doe_reg__intr_count_t_cnt_be67d6d5");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.cnt = new("cnt");
            this.cnt.configure(this, 32, 0, "RW", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__intr_count_t_cnt_be67d6d5

    // Reg - doe_reg::intr_count_incr_t_pulse_37026c97
    class doe_reg__intr_count_incr_t_pulse_37026c97 extends uvm_reg;
        rand uvm_reg_field pulse;

        function new(string name = "doe_reg__intr_count_incr_t_pulse_37026c97");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.pulse = new("pulse");
            this.pulse.configure(this, 1, 0, "RO", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__intr_count_incr_t_pulse_37026c97

    // Reg - doe_reg::intr_count_incr_t_pulse_d860d977
    class doe_reg__intr_count_incr_t_pulse_d860d977 extends uvm_reg;
        rand uvm_reg_field pulse;

        function new(string name = "doe_reg__intr_count_incr_t_pulse_d860d977");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.pulse = new("pulse");
            this.pulse.configure(this, 1, 0, "RO", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__intr_count_incr_t_pulse_d860d977

    // Reg - doe_reg::intr_count_incr_t_pulse_87b45fe7
    class doe_reg__intr_count_incr_t_pulse_87b45fe7 extends uvm_reg;
        rand uvm_reg_field pulse;

        function new(string name = "doe_reg__intr_count_incr_t_pulse_87b45fe7");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.pulse = new("pulse");
            this.pulse.configure(this, 1, 0, "RO", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__intr_count_incr_t_pulse_87b45fe7

    // Reg - doe_reg::intr_count_incr_t_pulse_c1689ee6
    class doe_reg__intr_count_incr_t_pulse_c1689ee6 extends uvm_reg;
        rand uvm_reg_field pulse;

        function new(string name = "doe_reg__intr_count_incr_t_pulse_c1689ee6");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.pulse = new("pulse");
            this.pulse.configure(this, 1, 0, "RO", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__intr_count_incr_t_pulse_c1689ee6

    // Reg - doe_reg::intr_count_incr_t_pulse_6173128e
    class doe_reg__intr_count_incr_t_pulse_6173128e extends uvm_reg;
        rand uvm_reg_field pulse;

        function new(string name = "doe_reg__intr_count_incr_t_pulse_6173128e");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.pulse = new("pulse");
            this.pulse.configure(this, 1, 0, "RO", 1, 'h0, 1, 1, 0);
        endfunction : build
    endclass : doe_reg__intr_count_incr_t_pulse_6173128e

    // Regfile - doe_reg::intr_block_t
    class doe_reg__intr_block_t extends uvm_reg_block;
        rand doe_reg__global_intr_en_t global_intr_en_r;
        rand doe_reg__error_intr_en_t error_intr_en_r;
        rand doe_reg__notif_intr_en_t notif_intr_en_r;
        rand doe_reg__global_intr_t_agg_sts_dd3dcf0a error_global_intr_r;
        rand doe_reg__global_intr_t_agg_sts_e6399b4a notif_global_intr_r;
        rand doe_reg__error_intr_t_error0_sts_5ee134bf_error1_sts_aad9583f_error2_sts_6cad4575_error3_sts_735bbeba error_internal_intr_r;
        rand doe_reg__notif_intr_t_notif_cmd_done_sts_1c68637e notif_internal_intr_r;
        rand doe_reg__error_intr_trig_t error_intr_trig_r;
        rand doe_reg__notif_intr_trig_t notif_intr_trig_r;
        rand doe_reg__intr_count_t_cnt_130ab269 error0_intr_count_r;
        rand doe_reg__intr_count_t_cnt_324dfc53 error1_intr_count_r;
        rand doe_reg__intr_count_t_cnt_791a4799 error2_intr_count_r;
        rand doe_reg__intr_count_t_cnt_e9de7334 error3_intr_count_r;
        rand doe_reg__intr_count_t_cnt_be67d6d5 notif_cmd_done_intr_count_r;
        rand doe_reg__intr_count_incr_t_pulse_37026c97 error0_intr_count_incr_r;
        rand doe_reg__intr_count_incr_t_pulse_d860d977 error1_intr_count_incr_r;
        rand doe_reg__intr_count_incr_t_pulse_87b45fe7 error2_intr_count_incr_r;
        rand doe_reg__intr_count_incr_t_pulse_c1689ee6 error3_intr_count_incr_r;
        rand doe_reg__intr_count_incr_t_pulse_6173128e notif_cmd_done_intr_count_incr_r;

        function new(string name = "doe_reg__intr_block_t");
            super.new(name);
        endfunction : new

        virtual function void build();
            this.default_map = create_map("reg_map", 0, 4, UVM_NO_ENDIAN);
            this.global_intr_en_r = new("global_intr_en_r");
            this.global_intr_en_r.configure(this);

            this.global_intr_en_r.build();
            this.default_map.add_reg(this.global_intr_en_r, 'h0);
            this.error_intr_en_r = new("error_intr_en_r");
            this.error_intr_en_r.configure(this);

            this.error_intr_en_r.build();
            this.default_map.add_reg(this.error_intr_en_r, 'h4);
            this.notif_intr_en_r = new("notif_intr_en_r");
            this.notif_intr_en_r.configure(this);

            this.notif_intr_en_r.build();
            this.default_map.add_reg(this.notif_intr_en_r, 'h8);
            this.error_global_intr_r = new("error_global_intr_r");
            this.error_global_intr_r.configure(this);

            this.error_global_intr_r.build();
            this.default_map.add_reg(this.error_global_intr_r, 'hc);
            this.notif_global_intr_r = new("notif_global_intr_r");
            this.notif_global_intr_r.configure(this);

            this.notif_global_intr_r.build();
            this.default_map.add_reg(this.notif_global_intr_r, 'h10);
            this.error_internal_intr_r = new("error_internal_intr_r");
            this.error_internal_intr_r.configure(this);

            this.error_internal_intr_r.build();
            this.default_map.add_reg(this.error_internal_intr_r, 'h14);
            this.notif_internal_intr_r = new("notif_internal_intr_r");
            this.notif_internal_intr_r.configure(this);

            this.notif_internal_intr_r.build();
            this.default_map.add_reg(this.notif_internal_intr_r, 'h18);
            this.error_intr_trig_r = new("error_intr_trig_r");
            this.error_intr_trig_r.configure(this);

            this.error_intr_trig_r.build();
            this.default_map.add_reg(this.error_intr_trig_r, 'h1c);
            this.notif_intr_trig_r = new("notif_intr_trig_r");
            this.notif_intr_trig_r.configure(this);

            this.notif_intr_trig_r.build();
            this.default_map.add_reg(this.notif_intr_trig_r, 'h20);
            this.error0_intr_count_r = new("error0_intr_count_r");
            this.error0_intr_count_r.configure(this);

            this.error0_intr_count_r.build();
            this.default_map.add_reg(this.error0_intr_count_r, 'h100);
            this.error1_intr_count_r = new("error1_intr_count_r");
            this.error1_intr_count_r.configure(this);

            this.error1_intr_count_r.build();
            this.default_map.add_reg(this.error1_intr_count_r, 'h104);
            this.error2_intr_count_r = new("error2_intr_count_r");
            this.error2_intr_count_r.configure(this);

            this.error2_intr_count_r.build();
            this.default_map.add_reg(this.error2_intr_count_r, 'h108);
            this.error3_intr_count_r = new("error3_intr_count_r");
            this.error3_intr_count_r.configure(this);

            this.error3_intr_count_r.build();
            this.default_map.add_reg(this.error3_intr_count_r, 'h10c);
            this.notif_cmd_done_intr_count_r = new("notif_cmd_done_intr_count_r");
            this.notif_cmd_done_intr_count_r.configure(this);

            this.notif_cmd_done_intr_count_r.build();
            this.default_map.add_reg(this.notif_cmd_done_intr_count_r, 'h180);
            this.error0_intr_count_incr_r = new("error0_intr_count_incr_r");
            this.error0_intr_count_incr_r.configure(this);

            this.error0_intr_count_incr_r.build();
            this.default_map.add_reg(this.error0_intr_count_incr_r, 'h200);
            this.error1_intr_count_incr_r = new("error1_intr_count_incr_r");
            this.error1_intr_count_incr_r.configure(this);

            this.error1_intr_count_incr_r.build();
            this.default_map.add_reg(this.error1_intr_count_incr_r, 'h204);
            this.error2_intr_count_incr_r = new("error2_intr_count_incr_r");
            this.error2_intr_count_incr_r.configure(this);

            this.error2_intr_count_incr_r.build();
            this.default_map.add_reg(this.error2_intr_count_incr_r, 'h208);
            this.error3_intr_count_incr_r = new("error3_intr_count_incr_r");
            this.error3_intr_count_incr_r.configure(this);

            this.error3_intr_count_incr_r.build();
            this.default_map.add_reg(this.error3_intr_count_incr_r, 'h20c);
            this.notif_cmd_done_intr_count_incr_r = new("notif_cmd_done_intr_count_incr_r");
            this.notif_cmd_done_intr_count_incr_r.configure(this);

            this.notif_cmd_done_intr_count_incr_r.build();
            this.default_map.add_reg(this.notif_cmd_done_intr_count_incr_r, 'h210);
        endfunction : build
    endclass : doe_reg__intr_block_t

    // Addrmap - doe_reg
    class doe_reg extends uvm_reg_block;
        rand doe_reg__DOE_IV DOE_IV[4];
        rand doe_reg__DOE_CTRL DOE_CTRL;
        rand doe_reg__DOE_STATUS DOE_STATUS;
        rand doe_reg__intr_block_t intr_block_rf;

        function new(string name = "doe_reg");
            super.new(name);
        endfunction : new

        virtual function void build();
            this.default_map = create_map("reg_map", 0, 4, UVM_NO_ENDIAN);
            foreach(this.DOE_IV[i0]) begin
                this.DOE_IV[i0] = new($sformatf("DOE_IV[%0d]", i0));
                this.DOE_IV[i0].configure(this);
                
                this.DOE_IV[i0].build();
                this.default_map.add_reg(this.DOE_IV[i0], 'h0 + i0*'h4);
            end
            this.DOE_CTRL = new("DOE_CTRL");
            this.DOE_CTRL.configure(this);

            this.DOE_CTRL.build();
            this.default_map.add_reg(this.DOE_CTRL, 'h10);
            this.DOE_STATUS = new("DOE_STATUS");
            this.DOE_STATUS.configure(this);

            this.DOE_STATUS.build();
            this.default_map.add_reg(this.DOE_STATUS, 'h14);
            this.intr_block_rf = new("intr_block_rf");
            this.intr_block_rf.configure(this);
            this.intr_block_rf.build();
            this.default_map.add_submap(this.intr_block_rf.default_map, 'h800);
        endfunction : build
    endclass : doe_reg

endpackage: doe_reg_uvm
