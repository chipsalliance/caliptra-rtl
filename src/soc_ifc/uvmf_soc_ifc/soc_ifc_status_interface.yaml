uvmf:
  interfaces:
    soc_ifc_status:
      clock: clk
      reset: dummy
      reset_assertion_level: 'False'

      config_constraints: []
      config_vars: []

      hdl_typedefs: []
      hvl_typedefs: []

      parameters: []

      # NOTE: Ports are 'output' instead of 'input' because this agent
      #       will be in RESPONDER mode, which inverts all port's polarities
      ports:
      # Ready indicators
      - name: ready_for_fuses
        dir: output
        width: '1'
      - name: ready_for_fw_push
        dir: output
        width: '1'
      - name: ready_for_runtime
        dir: output
        width: '1'

      # Command indicators
      - name: mailbox_data_avail
        dir: output
        width: '1'
      - name: mailbox_flow_done
        dir: output
        width: '1'

      # Generic signals
      - name: generic_output_wires
        dir: output
        width: '64'

      transaction_constraints: []
      transaction_vars:
      # Ready indicators
      - name: ready_for_fuses
        type: bit
        iscompare: 'False'
        isrand: 'False'
      - name: ready_for_fw_push
        type: bit
        iscompare: 'False'
        isrand: 'False'
      - name: ready_for_runtime
        type: bit
        iscompare: 'False'
        isrand: 'False'

      # Command indicators
      - name: mailbox_data_avail
        type: bit
        iscompare: 'False'
        isrand: 'False'
      - name: mailbox_flow_done
        type: bit
        iscompare: 'False'
        isrand: 'False'

      # Generic signals
      - name: generic_output_val
        type: bit [63:0]
        iscompare: 'False'
        isrand: 'False'

    cptra_status:
      clock: clk
      reset: dummy
      reset_assertion_level: 'False'

      config_constraints: []
      config_vars: []

      hdl_typedefs: []
      hvl_typedefs: []

      parameters: []

      # NOTE: Ports are 'output' instead of 'input' because this agent
      #       will be in RESPONDER mode, which inverts all port's polarities
      ports:
      #uC reset
      - name: cptra_noncore_rst_b
        dir: output
        width: '1'
      - name: cptra_uc_rst_b
        dir: output
        width: '1'

      #Obfuscated UDS and FE
      - name: cptra_obf_key_reg
        dir: output
        width: ["8","32"]
      - name: obf_field_entropy
        dir: output
        width: ["32","32"]
      - name: obf_uds_seed
        dir: output
        width: ["12","32"]

      #uC Interrupts
      - name: soc_ifc_error_intr
        dir: output
        width: '1'
      - name: soc_ifc_notif_intr
        dir: output
        width: '1'
      - name: sha_error_intr
        dir: output
        width: '1'
      - name: sha_notif_intr
        dir: output
        width: '1'

      # NMI Vector
      - name: nmi_vector
        dir: output
        width: '32'

      # ICCM Lock
      - name: iccm_lock
        dir: output
        width: '1'

      transaction_constraints: []
      transaction_vars:
      # Caliptra Internal Interrupts
      - name: soc_ifc_err_intr_pending
        type: bit
        iscompare: 'False'
        isrand: 'False'
      - name: soc_ifc_notif_intr_pending
        type: bit
        iscompare: 'False'
        isrand: 'False'
      - name: sha_err_intr_pending
        type: bit
        iscompare: 'False'
        isrand: 'False'
      - name: sha_notif_intr_pending
        type: bit
        iscompare: 'False'
        isrand: 'False'

      # Subsystem reset
      - name: noncore_rst_asserted
        type: bit
        iscompare: 'False'
        isrand: 'False'
      - name: uc_rst_asserted
        type: bit
        iscompare: 'False'
        isrand: 'False'

      #Obfuscated UDS and FE
      - name: cptra_obf_key_reg
        type: bit [7:0] [31:0]
        iscompare: 'False'
        isrand: 'False'
      - name: obf_field_entropy
        type: bit [31:0] [31:0]
        iscompare: 'False'
        isrand: 'False'
      - name: obf_uds_seed
        type: bit [11:0] [31:0]
        iscompare: 'False'
        isrand: 'False'

      # NMI Vector
      - name: nmi_vector
        type: bit [31:0]
        iscompare: 'True'
        isrand: 'False'

      # ICCM Lock
      - name: iccm_locked
        type: bit
        iscompare: 'True'
        isrand: 'False'
