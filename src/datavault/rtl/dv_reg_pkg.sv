// Generated by PeakRDL-regblock - A free and open-source SystemVerilog generator
//  https://github.com/SystemRDL/PeakRDL-regblock

package dv_reg_pkg;

    localparam DV_REG_DATA_WIDTH = 32;
    localparam DV_REG_MIN_ADDR_WIDTH = 11;

    typedef struct packed{
        logic swwel;
    } dv_reg__StickyDataVaultCtrl__lock_entry__in_t;

    typedef struct packed{
        dv_reg__StickyDataVaultCtrl__lock_entry__in_t lock_entry;
    } dv_reg__StickyDataVaultCtrl__in_t;

    typedef struct packed{
        logic swwel;
    } dv_reg__StickyDataVaultEntry_w32__in_t;

    typedef struct packed{
        dv_reg__StickyDataVaultEntry_w32__in_t data;
    } dv_reg__StickyDataVaultReg__in_t;

    typedef struct packed{
        logic swwel;
    } dv_reg__DataVaultCtrl__lock_entry__in_t;

    typedef struct packed{
        dv_reg__DataVaultCtrl__lock_entry__in_t lock_entry;
    } dv_reg__DataVaultCtrl__in_t;

    typedef struct packed{
        logic swwel;
    } dv_reg__DataVaultEntry_w32__in_t;

    typedef struct packed{
        dv_reg__DataVaultEntry_w32__in_t data;
    } dv_reg__DataVaultReg__in_t;

    typedef struct packed{
        logic swwel;
    } dv_reg__LockableScratchRegCtrl__lock_entry__in_t;

    typedef struct packed{
        dv_reg__LockableScratchRegCtrl__lock_entry__in_t lock_entry;
    } dv_reg__LockableScratchRegCtrl__in_t;

    typedef struct packed{
        logic swwel;
    } dv_reg__LockableScratchReg__data__in_t;

    typedef struct packed{
        dv_reg__LockableScratchReg__data__in_t data;
    } dv_reg__LockableScratchReg__in_t;

    typedef struct packed{
        logic swwel;
    } dv_reg__StickyLockableScratchRegCtrl__lock_entry__in_t;

    typedef struct packed{
        dv_reg__StickyLockableScratchRegCtrl__lock_entry__in_t lock_entry;
    } dv_reg__StickyLockableScratchRegCtrl__in_t;

    typedef struct packed{
        logic swwel;
    } dv_reg__StickyLockableScratchReg__data__in_t;

    typedef struct packed{
        dv_reg__StickyLockableScratchReg__data__in_t data;
    } dv_reg__StickyLockableScratchReg__in_t;

    typedef struct packed{
        logic reset_b;
        logic core_only_rst_b;
        logic hard_reset_b;
        dv_reg__StickyDataVaultCtrl__in_t [10-1:0]StickyDataVaultCtrl;
        dv_reg__StickyDataVaultReg__in_t [10-1:0][12-1:0]STICKY_DATA_VAULT_ENTRY;
        dv_reg__DataVaultCtrl__in_t [10-1:0]DataVaultCtrl;
        dv_reg__DataVaultReg__in_t [10-1:0][12-1:0]DATA_VAULT_ENTRY;
        dv_reg__LockableScratchRegCtrl__in_t [10-1:0]LockableScratchRegCtrl;
        dv_reg__LockableScratchReg__in_t [10-1:0]LockableScratchReg;
        dv_reg__StickyLockableScratchRegCtrl__in_t [8-1:0]StickyLockableScratchRegCtrl;
        dv_reg__StickyLockableScratchReg__in_t [8-1:0]StickyLockableScratchReg;
    } dv_reg__in_t;

    typedef struct packed{
        logic value;
    } dv_reg__StickyDataVaultCtrl__lock_entry__out_t;

    typedef struct packed{
        dv_reg__StickyDataVaultCtrl__lock_entry__out_t lock_entry;
    } dv_reg__StickyDataVaultCtrl__out_t;

    typedef struct packed{
        logic value;
    } dv_reg__DataVaultCtrl__lock_entry__out_t;

    typedef struct packed{
        dv_reg__DataVaultCtrl__lock_entry__out_t lock_entry;
    } dv_reg__DataVaultCtrl__out_t;

    typedef struct packed{
        logic value;
    } dv_reg__LockableScratchRegCtrl__lock_entry__out_t;

    typedef struct packed{
        dv_reg__LockableScratchRegCtrl__lock_entry__out_t lock_entry;
    } dv_reg__LockableScratchRegCtrl__out_t;

    typedef struct packed{
        logic value;
    } dv_reg__StickyLockableScratchRegCtrl__lock_entry__out_t;

    typedef struct packed{
        dv_reg__StickyLockableScratchRegCtrl__lock_entry__out_t lock_entry;
    } dv_reg__StickyLockableScratchRegCtrl__out_t;

    typedef struct packed{
        dv_reg__StickyDataVaultCtrl__out_t [10-1:0]StickyDataVaultCtrl;
        dv_reg__DataVaultCtrl__out_t [10-1:0]DataVaultCtrl;
        dv_reg__LockableScratchRegCtrl__out_t [10-1:0]LockableScratchRegCtrl;
        dv_reg__StickyLockableScratchRegCtrl__out_t [8-1:0]StickyLockableScratchRegCtrl;
    } dv_reg__out_t;

    localparam DV_REG_ADDR_WIDTH = 32'd11;

endpackage