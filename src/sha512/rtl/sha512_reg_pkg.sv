// Generated by PeakRDL-regblock - A free and open-source SystemVerilog generator
//  https://github.com/SystemRDL/PeakRDL-regblock

package sha512_reg_pkg;
    typedef struct {
        logic [31:0] next;
    } sha512_reg__SHA512_NAME__NAME__in_t;

    typedef struct {
        sha512_reg__SHA512_NAME__NAME__in_t NAME;
    } sha512_reg__SHA512_NAME__in_t;

    typedef struct {
        logic [31:0] next;
    } sha512_reg__SHA512_VERSION__VERSION__in_t;

    typedef struct {
        sha512_reg__SHA512_VERSION__VERSION__in_t VERSION;
    } sha512_reg__SHA512_VERSION__in_t;

    typedef struct {
        logic next;
    } sha512_reg__SHA512_CTRL__INIT__in_t;

    typedef struct {
        logic next;
    } sha512_reg__SHA512_CTRL__NEXT__in_t;

    typedef struct {
        logic [1:0] next;
    } sha512_reg__SHA512_CTRL__MODE__in_t;

    typedef struct {
        sha512_reg__SHA512_CTRL__INIT__in_t INIT;
        sha512_reg__SHA512_CTRL__NEXT__in_t NEXT;
        sha512_reg__SHA512_CTRL__MODE__in_t MODE;
    } sha512_reg__SHA512_CTRL__in_t;

    typedef struct {
        logic next;
    } sha512_reg__SHA512_STATUS__READY__in_t;

    typedef struct {
        logic next;
    } sha512_reg__SHA512_STATUS__VALID__in_t;

    typedef struct {
        sha512_reg__SHA512_STATUS__READY__in_t READY;
        sha512_reg__SHA512_STATUS__VALID__in_t VALID;
    } sha512_reg__SHA512_STATUS__in_t;

    typedef struct {
        logic [31:0] next;
    } sha512_reg__SHA512_DIGEST__DIGEST__in_t;

    typedef struct {
        sha512_reg__SHA512_DIGEST__DIGEST__in_t DIGEST;
    } sha512_reg__SHA512_DIGEST__in_t;

    typedef struct {
        logic reset_b;
        sha512_reg__SHA512_NAME__in_t SHA512_NAME[2];
        sha512_reg__SHA512_VERSION__in_t SHA512_VERSION[2];
        sha512_reg__SHA512_CTRL__in_t SHA512_CTRL;
        sha512_reg__SHA512_STATUS__in_t SHA512_STATUS;
        sha512_reg__SHA512_DIGEST__in_t SHA512_DIGEST[16];
    } sha512_reg__in_t;

    typedef struct {
        logic value;
    } sha512_reg__SHA512_CTRL__INIT__out_t;

    typedef struct {
        logic value;
    } sha512_reg__SHA512_CTRL__NEXT__out_t;

    typedef struct {
        logic [1:0] value;
    } sha512_reg__SHA512_CTRL__MODE__out_t;

    typedef struct {
        sha512_reg__SHA512_CTRL__INIT__out_t INIT;
        sha512_reg__SHA512_CTRL__NEXT__out_t NEXT;
        sha512_reg__SHA512_CTRL__MODE__out_t MODE;
    } sha512_reg__SHA512_CTRL__out_t;

    typedef struct {
        logic [31:0] value;
    } sha512_reg__SHA512_BLOCK__BLOCK__out_t;

    typedef struct {
        sha512_reg__SHA512_BLOCK__BLOCK__out_t BLOCK;
    } sha512_reg__SHA512_BLOCK__out_t;

    typedef struct {
        sha512_reg__SHA512_CTRL__out_t SHA512_CTRL;
        sha512_reg__SHA512_BLOCK__out_t SHA512_BLOCK[32];
    } sha512_reg__out_t;

    localparam SHA512_REG_ADDR_WIDTH = 32'd9;

endpackage