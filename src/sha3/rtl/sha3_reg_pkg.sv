// Generated by PeakRDL-regblock - A free and open-source SystemVerilog generator
//  https://github.com/SystemRDL/PeakRDL-regblock

package sha3_reg_pkg;

    localparam SHA3_REG_DATA_WIDTH = 32;
    localparam SHA3_REG_MIN_ADDR_WIDTH = 12;

    typedef struct packed{
        logic [31:0] next;
    } sha3_reg__SHA3_NAME__NAME__in_t;

    typedef struct packed{
        sha3_reg__SHA3_NAME__NAME__in_t NAME;
    } sha3_reg__SHA3_NAME__in_t;

    typedef struct packed{
        logic [31:0] next;
    } sha3_reg__SHA3_VERSION__VERSION__in_t;

    typedef struct packed{
        sha3_reg__SHA3_VERSION__VERSION__in_t VERSION;
    } sha3_reg__SHA3_VERSION__in_t;

    typedef struct packed{
        logic next;
    } sha3_reg__CFG_REGWEN__en__in_t;

    typedef struct packed{
        sha3_reg__CFG_REGWEN__en__in_t en;
    } sha3_reg__CFG_REGWEN__in_t;

    typedef struct packed{
        logic rd_ack;
        logic [31:0] rd_data;
        logic wr_ack;
    } sha3_reg__CFG_SHADOWED__external__in_t;

    typedef struct packed{
        logic next;
    } sha3_reg__STATUS__sha3_idle__in_t;

    typedef struct packed{
        logic next;
    } sha3_reg__STATUS__sha3_absorb__in_t;

    typedef struct packed{
        logic next;
    } sha3_reg__STATUS__sha3_squeeze__in_t;

    typedef struct packed{
        logic [4:0] next;
    } sha3_reg__STATUS__fifo_depth__in_t;

    typedef struct packed{
        logic next;
    } sha3_reg__STATUS__fifo_empty__in_t;

    typedef struct packed{
        logic next;
    } sha3_reg__STATUS__fifo_full__in_t;

    typedef struct packed{
        logic next;
    } sha3_reg__STATUS__ALERT_FATAL_FAULT__in_t;

    typedef struct packed{
        logic next;
    } sha3_reg__STATUS__ALERT_RECOV_CTRL_UPDATE_ERR__in_t;

    typedef struct packed{
        sha3_reg__STATUS__sha3_idle__in_t sha3_idle;
        sha3_reg__STATUS__sha3_absorb__in_t sha3_absorb;
        sha3_reg__STATUS__sha3_squeeze__in_t sha3_squeeze;
        sha3_reg__STATUS__fifo_depth__in_t fifo_depth;
        sha3_reg__STATUS__fifo_empty__in_t fifo_empty;
        sha3_reg__STATUS__fifo_full__in_t fifo_full;
        sha3_reg__STATUS__ALERT_FATAL_FAULT__in_t ALERT_FATAL_FAULT;
        sha3_reg__STATUS__ALERT_RECOV_CTRL_UPDATE_ERR__in_t ALERT_RECOV_CTRL_UPDATE_ERR;
    } sha3_reg__STATUS__in_t;

    typedef struct packed{
        logic [31:0] next;
    } sha3_reg__ERR_CODE__ERR_CODE__in_t;

    typedef struct packed{
        sha3_reg__ERR_CODE__ERR_CODE__in_t ERR_CODE;
    } sha3_reg__ERR_CODE__in_t;

    typedef struct packed{
        logic rd_ack;
        logic [31:0] rd_data;
        logic wr_ack;
    } sha3_reg__STATE__external__in_t;

    typedef struct packed{
        logic hwset;
    } sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error0_sts_enable_528ccada_next_b1018582_resetsignal_939e99d4__in_t;

    typedef struct packed{
        logic hwset;
    } sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error1_sts_enable_938cafef_next_f460eb81_resetsignal_939e99d4__in_t;

    typedef struct packed{
        logic hwset;
    } sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error2_sts_enable_0dacf7a6_next_4b5b9e74_resetsignal_939e99d4__in_t;

    typedef struct packed{
        logic hwset;
    } sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error3_sts_enable_fc3af94b_next_c3125d40_resetsignal_939e99d4__in_t;

    typedef struct packed{
        sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error0_sts_enable_528ccada_next_b1018582_resetsignal_939e99d4__in_t error0_sts;
        sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error1_sts_enable_938cafef_next_f460eb81_resetsignal_939e99d4__in_t error1_sts;
        sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error2_sts_enable_0dacf7a6_next_4b5b9e74_resetsignal_939e99d4__in_t error2_sts;
        sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error3_sts_enable_fc3af94b_next_c3125d40_resetsignal_939e99d4__in_t error3_sts;
    } sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__in_t;

    typedef struct packed{
        logic hwset;
    } sha3_reg__notif_intr_t_notif_cmd_done_sts_1c68637e_notif_msg_fifo_empty_sts_df694e73__notif_cmd_done_sts_enable_dabe0b8b_next_540fa3b7__in_t;

    typedef struct packed{
        logic hwset;
    } sha3_reg__notif_intr_t_notif_cmd_done_sts_1c68637e_notif_msg_fifo_empty_sts_df694e73__notif_msg_fifo_empty_sts_enable_16bab8d8_next_b0e8f486__in_t;

    typedef struct packed{
        sha3_reg__notif_intr_t_notif_cmd_done_sts_1c68637e_notif_msg_fifo_empty_sts_df694e73__notif_cmd_done_sts_enable_dabe0b8b_next_540fa3b7__in_t notif_cmd_done_sts;
        sha3_reg__notif_intr_t_notif_cmd_done_sts_1c68637e_notif_msg_fifo_empty_sts_df694e73__notif_msg_fifo_empty_sts_enable_16bab8d8_next_b0e8f486__in_t notif_msg_fifo_empty_sts;
    } sha3_reg__notif_intr_t_notif_cmd_done_sts_1c68637e_notif_msg_fifo_empty_sts_df694e73__in_t;

    typedef struct packed{
        sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__in_t error_internal_intr_r;
        sha3_reg__notif_intr_t_notif_cmd_done_sts_1c68637e_notif_msg_fifo_empty_sts_df694e73__in_t notif_internal_intr_r;
    } sha3_reg__intr_block_t__in_t;

    typedef struct packed{
        logic rd_ack;
        logic [31:0] rd_data;
        logic wr_ack;
    } sha3_reg__MSG_FIFO__external__in_t;

    typedef struct packed{
        logic reset_b;
        logic error_reset_b;
        sha3_reg__SHA3_NAME__in_t [2-1:0]SHA3_NAME;
        sha3_reg__SHA3_VERSION__in_t [2-1:0]SHA3_VERSION;
        sha3_reg__CFG_REGWEN__in_t CFG_REGWEN;
        sha3_reg__CFG_SHADOWED__external__in_t CFG_SHADOWED;
        sha3_reg__STATUS__in_t STATUS;
        sha3_reg__ERR_CODE__in_t ERR_CODE;
        sha3_reg__STATE__external__in_t STATE;
        sha3_reg__intr_block_t__in_t intr_block_rf;
        sha3_reg__MSG_FIFO__external__in_t MSG_FIFO;
    } sha3_reg__in_t;

    typedef struct packed{
        logic value;
    } sha3_reg__CFG_REGWEN__en__out_t;

    typedef struct packed{
        sha3_reg__CFG_REGWEN__en__out_t en;
    } sha3_reg__CFG_REGWEN__out_t;

    typedef struct packed{
        logic req;
        logic req_is_wr;
        logic [31:0] wr_data;
        logic [31:0] wr_biten;
    } sha3_reg__CFG_SHADOWED__external__out_t;

    typedef struct packed{
        logic [5:0] value;
    } sha3_reg__CMD__cmd__out_t;

    typedef struct packed{
        logic value;
    } sha3_reg__CMD__err_processed__out_t;

    typedef struct packed{
        sha3_reg__CMD__cmd__out_t cmd;
        sha3_reg__CMD__err_processed__out_t err_processed;
    } sha3_reg__CMD__out_t;

    typedef struct packed{
        logic req;
        logic [7:0] addr;
        logic req_is_wr;
        logic [31:0] wr_data;
        logic [31:0] wr_biten;
    } sha3_reg__STATE__external__out_t;

    typedef struct packed{
        logic intr;
    } sha3_reg__global_intr_t_agg_sts_dd3dcf0a__out_t;

    typedef struct packed{
        logic intr;
    } sha3_reg__global_intr_t_agg_sts_e6399b4a__out_t;

    typedef struct packed{
        logic intr;
    } sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__out_t;

    typedef struct packed{
        logic intr;
    } sha3_reg__notif_intr_t_notif_cmd_done_sts_1c68637e_notif_msg_fifo_empty_sts_df694e73__out_t;

    typedef struct packed{
        sha3_reg__global_intr_t_agg_sts_dd3dcf0a__out_t error_global_intr_r;
        sha3_reg__global_intr_t_agg_sts_e6399b4a__out_t notif_global_intr_r;
        sha3_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__out_t error_internal_intr_r;
        sha3_reg__notif_intr_t_notif_cmd_done_sts_1c68637e_notif_msg_fifo_empty_sts_df694e73__out_t notif_internal_intr_r;
    } sha3_reg__intr_block_t__out_t;

    typedef struct packed{
        logic req;
        logic [7:0] addr;
        logic req_is_wr;
        logic [31:0] wr_data;
        logic [31:0] wr_biten;
    } sha3_reg__MSG_FIFO__external__out_t;

    typedef struct packed{
        sha3_reg__CFG_REGWEN__out_t CFG_REGWEN;
        sha3_reg__CFG_SHADOWED__external__out_t CFG_SHADOWED;
        sha3_reg__CMD__out_t CMD;
        sha3_reg__STATE__external__out_t STATE;
        sha3_reg__intr_block_t__out_t intr_block_rf;
        sha3_reg__MSG_FIFO__external__out_t MSG_FIFO;
    } sha3_reg__out_t;

    localparam SHA3_REG_ADDR_WIDTH = 32'd12;

endpackage