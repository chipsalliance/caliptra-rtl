// Generated by PeakRDL-regblock - A free and open-source SystemVerilog generator
//  https://github.com/SystemRDL/PeakRDL-regblock

package sha256_reg_pkg;

    localparam SHA256_REG_DATA_WIDTH = 32;
    localparam SHA256_REG_MIN_ADDR_WIDTH = 12;

    typedef struct packed{
        logic [31:0] next;
    } sha256_reg__SHA256_NAME__NAME__in_t;

    typedef struct packed{
        sha256_reg__SHA256_NAME__NAME__in_t NAME;
    } sha256_reg__SHA256_NAME__in_t;

    typedef struct packed{
        logic [31:0] next;
    } sha256_reg__SHA256_VERSION__VERSION__in_t;

    typedef struct packed{
        sha256_reg__SHA256_VERSION__VERSION__in_t VERSION;
    } sha256_reg__SHA256_VERSION__in_t;

    typedef struct packed{
        logic next;
    } sha256_reg__SHA256_STATUS__READY__in_t;

    typedef struct packed{
        logic next;
    } sha256_reg__SHA256_STATUS__VALID__in_t;

    typedef struct packed{
        logic next;
    } sha256_reg__SHA256_STATUS__WNTZ_BUSY__in_t;

    typedef struct packed{
        sha256_reg__SHA256_STATUS__READY__in_t READY;
        sha256_reg__SHA256_STATUS__VALID__in_t VALID;
        sha256_reg__SHA256_STATUS__WNTZ_BUSY__in_t WNTZ_BUSY;
    } sha256_reg__SHA256_STATUS__in_t;

    typedef struct packed{
        logic hwclr;
    } sha256_reg__SHA256_BLOCK__BLOCK__in_t;

    typedef struct packed{
        sha256_reg__SHA256_BLOCK__BLOCK__in_t BLOCK;
    } sha256_reg__SHA256_BLOCK__in_t;

    typedef struct packed{
        logic [31:0] next;
        logic hwclr;
    } sha256_reg__SHA256_DIGEST__DIGEST__in_t;

    typedef struct packed{
        sha256_reg__SHA256_DIGEST__DIGEST__in_t DIGEST;
    } sha256_reg__SHA256_DIGEST__in_t;

    typedef struct packed{
        logic hwset;
    } sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error0_sts_enable_528ccada_next_b1018582_resetsignal_939e99d4__in_t;

    typedef struct packed{
        logic hwset;
    } sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error1_sts_enable_938cafef_next_f460eb81_resetsignal_939e99d4__in_t;

    typedef struct packed{
        logic hwset;
    } sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error2_sts_enable_0dacf7a6_next_4b5b9e74_resetsignal_939e99d4__in_t;

    typedef struct packed{
        logic hwset;
    } sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error3_sts_enable_fc3af94b_next_c3125d40_resetsignal_939e99d4__in_t;

    typedef struct packed{
        sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error0_sts_enable_528ccada_next_b1018582_resetsignal_939e99d4__in_t error0_sts;
        sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error1_sts_enable_938cafef_next_f460eb81_resetsignal_939e99d4__in_t error1_sts;
        sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error2_sts_enable_0dacf7a6_next_4b5b9e74_resetsignal_939e99d4__in_t error2_sts;
        sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__error3_sts_enable_fc3af94b_next_c3125d40_resetsignal_939e99d4__in_t error3_sts;
    } sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__in_t;

    typedef struct packed{
        logic hwset;
    } sha256_reg__notif_intr_t_notif_cmd_done_sts_1c68637e__notif_cmd_done_sts_enable_dabe0b8b_next_540fa3b7__in_t;

    typedef struct packed{
        sha256_reg__notif_intr_t_notif_cmd_done_sts_1c68637e__notif_cmd_done_sts_enable_dabe0b8b_next_540fa3b7__in_t notif_cmd_done_sts;
    } sha256_reg__notif_intr_t_notif_cmd_done_sts_1c68637e__in_t;

    typedef struct packed{
        sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__in_t error_internal_intr_r;
        sha256_reg__notif_intr_t_notif_cmd_done_sts_1c68637e__in_t notif_internal_intr_r;
    } sha256_reg__intr_block_t__in_t;

    typedef struct packed{
        logic reset_b;
        logic error_reset_b;
        logic sha256_ready;
        sha256_reg__SHA256_NAME__in_t [2-1:0]SHA256_NAME;
        sha256_reg__SHA256_VERSION__in_t [2-1:0]SHA256_VERSION;
        sha256_reg__SHA256_STATUS__in_t SHA256_STATUS;
        sha256_reg__SHA256_BLOCK__in_t [16-1:0]SHA256_BLOCK;
        sha256_reg__SHA256_DIGEST__in_t [8-1:0]SHA256_DIGEST;
        sha256_reg__intr_block_t__in_t intr_block_rf;
    } sha256_reg__in_t;

    typedef struct packed{
        logic value;
    } sha256_reg__SHA256_CTRL__INIT__out_t;

    typedef struct packed{
        logic value;
    } sha256_reg__SHA256_CTRL__NEXT__out_t;

    typedef struct packed{
        logic value;
    } sha256_reg__SHA256_CTRL__MODE__out_t;

    typedef struct packed{
        logic value;
    } sha256_reg__SHA256_CTRL__ZEROIZE__out_t;

    typedef struct packed{
        logic value;
    } sha256_reg__SHA256_CTRL__WNTZ_MODE__out_t;

    typedef struct packed{
        logic [3:0] value;
    } sha256_reg__SHA256_CTRL__WNTZ_W__out_t;

    typedef struct packed{
        logic value;
    } sha256_reg__SHA256_CTRL__WNTZ_N_MODE__out_t;

    typedef struct packed{
        sha256_reg__SHA256_CTRL__INIT__out_t INIT;
        sha256_reg__SHA256_CTRL__NEXT__out_t NEXT;
        sha256_reg__SHA256_CTRL__MODE__out_t MODE;
        sha256_reg__SHA256_CTRL__ZEROIZE__out_t ZEROIZE;
        sha256_reg__SHA256_CTRL__WNTZ_MODE__out_t WNTZ_MODE;
        sha256_reg__SHA256_CTRL__WNTZ_W__out_t WNTZ_W;
        sha256_reg__SHA256_CTRL__WNTZ_N_MODE__out_t WNTZ_N_MODE;
    } sha256_reg__SHA256_CTRL__out_t;

    typedef struct packed{
        logic [31:0] value;
    } sha256_reg__SHA256_BLOCK__BLOCK__out_t;

    typedef struct packed{
        sha256_reg__SHA256_BLOCK__BLOCK__out_t BLOCK;
    } sha256_reg__SHA256_BLOCK__out_t;

    typedef struct packed{
        logic intr;
    } sha256_reg__global_intr_t_agg_sts_dd3dcf0a__out_t;

    typedef struct packed{
        logic intr;
    } sha256_reg__global_intr_t_agg_sts_e6399b4a__out_t;

    typedef struct packed{
        logic intr;
    } sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__out_t;

    typedef struct packed{
        logic intr;
    } sha256_reg__notif_intr_t_notif_cmd_done_sts_1c68637e__out_t;

    typedef struct packed{
        sha256_reg__global_intr_t_agg_sts_dd3dcf0a__out_t error_global_intr_r;
        sha256_reg__global_intr_t_agg_sts_e6399b4a__out_t notif_global_intr_r;
        sha256_reg__error_intr_t_error0_sts_28545624_error1_sts_40e0d3e1_error2_sts_b1cf2205_error3_sts_74a35378__out_t error_internal_intr_r;
        sha256_reg__notif_intr_t_notif_cmd_done_sts_1c68637e__out_t notif_internal_intr_r;
    } sha256_reg__intr_block_t__out_t;

    typedef struct packed{
        sha256_reg__SHA256_CTRL__out_t SHA256_CTRL;
        sha256_reg__SHA256_BLOCK__out_t [16-1:0]SHA256_BLOCK;
        sha256_reg__intr_block_t__out_t intr_block_rf;
    } sha256_reg__out_t;

    localparam SHA256_REG_ADDR_WIDTH = 32'd12;

endpackage