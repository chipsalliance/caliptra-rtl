// Generated by PeakRDL-regblock - A free and open-source SystemVerilog generator
//  https://github.com/SystemRDL/PeakRDL-regblock

package hmac_reg_pkg;
    typedef struct {
        logic [31:0] next;
    } hmac_reg__HMAC384_NAME__NAME__in_t;

    typedef struct {
        hmac_reg__HMAC384_NAME__NAME__in_t NAME;
    } hmac_reg__HMAC384_NAME__in_t;

    typedef struct {
        logic [31:0] next;
    } hmac_reg__HMAC384_VERSION__VERSION__in_t;

    typedef struct {
        hmac_reg__HMAC384_VERSION__VERSION__in_t VERSION;
    } hmac_reg__HMAC384_VERSION__in_t;

    typedef struct {
        logic next;
    } hmac_reg__HMAC384_CTRL__INIT__in_t;

    typedef struct {
        logic next;
    } hmac_reg__HMAC384_CTRL__NEXT__in_t;

    typedef struct {
        hmac_reg__HMAC384_CTRL__INIT__in_t INIT;
        hmac_reg__HMAC384_CTRL__NEXT__in_t NEXT;
    } hmac_reg__HMAC384_CTRL__in_t;

    typedef struct {
        logic next;
    } hmac_reg__HMAC384_STATUS__READY__in_t;

    typedef struct {
        logic next;
    } hmac_reg__HMAC384_STATUS__VALID__in_t;

    typedef struct {
        hmac_reg__HMAC384_STATUS__READY__in_t READY;
        hmac_reg__HMAC384_STATUS__VALID__in_t VALID;
    } hmac_reg__HMAC384_STATUS__in_t;

    typedef struct {
        logic [31:0] next;
    } hmac_reg__HMAC384_TAG__TAG__in_t;

    typedef struct {
        hmac_reg__HMAC384_TAG__TAG__in_t TAG;
    } hmac_reg__HMAC384_TAG__in_t;

    typedef struct {
        logic reset_b;
        hmac_reg__HMAC384_NAME__in_t HMAC384_NAME[2];
        hmac_reg__HMAC384_VERSION__in_t HMAC384_VERSION[2];
        hmac_reg__HMAC384_CTRL__in_t HMAC384_CTRL;
        hmac_reg__HMAC384_STATUS__in_t HMAC384_STATUS;
        hmac_reg__HMAC384_TAG__in_t HMAC384_TAG[12];
    } hmac_reg__in_t;

    typedef struct {
        logic value;
    } hmac_reg__HMAC384_CTRL__INIT__out_t;

    typedef struct {
        logic value;
    } hmac_reg__HMAC384_CTRL__NEXT__out_t;

    typedef struct {
        hmac_reg__HMAC384_CTRL__INIT__out_t INIT;
        hmac_reg__HMAC384_CTRL__NEXT__out_t NEXT;
    } hmac_reg__HMAC384_CTRL__out_t;

    typedef struct {
        logic [31:0] value;
    } hmac_reg__HMAC384_KEY__KEY__out_t;

    typedef struct {
        hmac_reg__HMAC384_KEY__KEY__out_t KEY;
    } hmac_reg__HMAC384_KEY__out_t;

    typedef struct {
        logic [31:0] value;
    } hmac_reg__HMAC384_BLOCK__BLOCK__out_t;

    typedef struct {
        hmac_reg__HMAC384_BLOCK__BLOCK__out_t BLOCK;
    } hmac_reg__HMAC384_BLOCK__out_t;

    typedef struct {
        hmac_reg__HMAC384_CTRL__out_t HMAC384_CTRL;
        hmac_reg__HMAC384_KEY__out_t HMAC384_KEY[12];
        hmac_reg__HMAC384_BLOCK__out_t HMAC384_BLOCK[32];
    } hmac_reg__out_t;

    localparam HMAC_REG_ADDR_WIDTH = 32'd9;

endpackage