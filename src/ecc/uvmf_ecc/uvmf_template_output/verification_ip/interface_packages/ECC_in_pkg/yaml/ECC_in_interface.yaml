uvmf:
  interfaces:
    ECC_in:
      clock: clk
      config_constraints: []
      config_vars: []
      existing_library_component: 'True'
      gen_inbound_streaming_driver: 'False'
      hdl_pkg_parameters: []
      hdl_typedefs:
      - name: ecc_in_test_transactions
        type: enum bit[2:0] {ecc_reset_test = 3'b000, ecc_normal_test = 3'b001, ecc_otf_reset_test = 3'b010, ecc_openssl_test = 3'b011}
      - name: ecc_in_op_transactions
        type: enum bit[1:0] {key_gen = 2'b00, key_sign = 2'b01, key_verify = 2'b10 }
      hvl_pkg_parameters: []
      hvl_typedefs: []
      parameters:
      - name: AHB_ADDR_WIDTH
        type: int
        value: '32'
      - name: AHB_DATA_WIDTH
        type: int
        value: '32'
      ports:
      - dir: output
        name: ecc_rst_n
        reset_value: '''bz'
        width: '1'
      - dir: output
        name: haddr
        reset_value: '''bz'
        width: AHB_ADDR_WIDTH
      - dir: output
        name: hwdata
        reset_value: '''bz'
        width: AHB_DATA_WIDTH
      - dir: output
        name: hsel
        reset_value: '''bz'
        width: '1'
      - dir: output
        name: hwrite
        reset_value: '''bz'
        width: '1'
      - dir: output
        name: hready
        reset_value: '''bz'
        width: '1'
      - dir: output
        name: htrans
        reset_value: '''bz'
        width: '2'
      - dir: output
        name: hsize
        reset_value: '''bz'
        width: '3'
      - dir: input
        name: hrdata
        reset_value: '''bz'
        width: AHB_DATA_WIDTH
      - dir: input
        name: hreadyout
        reset_value: '''bz'
        width: '1'
      - dir: output
        name: transaction_flag_out_monitor
        reset_value: '''bz'
        width: '1'
      - dir: output
        name: test
        reset_value: '''bz'
        width: '3'
      - dir: output
        name: op
        reset_value: '''bz'
        width: '2'
      - dir: output
        name: test_case_sel
        reset_value: '''bz'
        width: '8'
      reset: rst_n
      reset_assertion_level: 'False'
      transaction_constraints:
      - comment: ''
        name: ecc_valid_test_contraints
        value: '{ test inside {ecc_normal_test, ecc_otf_reset_test, ecc_openssl_test}; }'
      - comment: ''
        name: ecc_valid_op_constrainsts
        value: '{ if (test == ecc_normal_test || test == ecc_otf_reset_test) { op inside {key_gen, key_sign, key_verify} ; } else if (test == ecc_openssl_test) { op inside {key_gen}; } }'
      - comment: ''
        name: ecc_valid_testcasesel_constraints
        value: '{ if (test == ecc_normal_test || test == ecc_otf_reset_test) { if (op == key_gen) { test_case_sel >= 0; test_case_sel <= 5; } else if (op == key_sign || op == key_verify) { test_case_sel >= 5; test_case_sel <= 9; } } else if (test == ecc_openssl_test) { test_case_sel >= 0; test_case_sel < 1; } }'
      transaction_vars:
      - comment: ''
        iscompare: 'True'
        isrand: 'True'
        name: test
        type: ecc_in_test_transactions
        unpacked_dimension: ''
      - comment: ''
        iscompare: 'True'
        isrand: 'True'
        name: op
        type: ecc_in_op_transactions
        unpacked_dimension: ''
      - comment: ''
        iscompare: 'True'
        isrand: 'True'
        name: test_case_sel
        type: bit [7:0]
        unpacked_dimension: ''
      use_dpi_link: 'False'
