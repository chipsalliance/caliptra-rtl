reference_delimiter:  "$"
variable_delimiter:   "{"
variable_endlimiter:  "}"

$default_policy:    last

conditions:

  - name:           COVERAGE
    type:           cli_key
    list:           unknown
    accepts_value:  forbidden
    key:            +COVERAGE
    consume:        true
    eval_in:        postsubmit

  - name:           FUNC_COVERAGE
    type:           cli_key
    list:           unknown
    accepts_value:  forbidden
    key:            +FUNC_COVERAGE
    consume:        true
    eval_in:        postsubmit

  - name:           CM_HIER
    type:           cli_key
    list:           unknown
    accepts_value:  required
    key:            +CM_HIER
    consume:        true
    eval_in:        postsubmit

rules:

  - name:       coverage
    run_in:     postsubmit
    conditions:
      - if: COVERAGE
        actions:
          - argdict:
              method:  append
              key:     elab-args
              value:   '-cm line+cond+fsm+tgl+branch+assert'

  - name:       func_coverage
    run_in:     postsubmit
    conditions:
      - if: FUNC_COVERAGE OR COVERAGE
        actions:
          - named: func_coverage_enable
          - named: fcov_define

  - name:       cm_hier
    run_in:     postsubmit
    conditions:
      - if: CM_HIER
        actions:
          - argdict:
              method:   append
              key:      elab-args
              value:    '-cm_hier ${conditions.CM_HIER.value}'

actions:

  func_coverage_enable:
    argdict:
      method:   append
      key:      def_targets
      value:    'coverage'

  fcov_define:
    argdict:
      method:   append
      key:      analyze-args
      value:    '+define+FCOV'