# docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

name: Verilator

on:
  push:
    branches: ["main", "dev-goog", "dev-msft"]
  pull_request:

  workflow_dispatch:

jobs:
  build_and_test:
    name: Verilator Smoke Test
    runs-on: ubuntu-22.04

    env:
      CARGO_INCREMENTAL: 0
      SCCACHE_VERSION: 0.3.3
      RISCV_VERSION: v12.1.0
      # TODO: To update to 5.006, clean up lint errors
      VERILATOR_VERSION: v4.228
      PKG_CONFIG_PATH: /opt/verilator/share/pkgconfig
      SCCACHE_GHA_CACHE_TO: sccache-verilator-10000
      SCCACHE_GHA_CACHE_FROM: sccache-verilator-
      # Change this to a new random value if you suspect the cache is corrupted
      SCCACHE_C_CUSTOM_CACHE_BUSTER: f3e6951f0c1d

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Restore Cargo index
        uses: actions/cache/restore@v3
        id: cargo_index_restore
        with:
          path: ~/.cargo/registry/index
          key: cargo-index-${{ env.SCCACHE_C_CUSTOM_CACHE_BUSTER }}-${{ hashFiles('Cargo.lock') }}

      - name: Restore sccache binary
        uses: actions/cache/restore@v3
        id: sccache_bin_restore
        with:
          path: ~/.cargo/bin/sccache
          key: sccache-bin-${{ env.SCCACHE_VERSION }}-${{ env.SCCACHE_C_CUSTOM_CACHE_BUSTER }}

      - name: Install sccache
        if: steps.sccache_bin_restore.outputs.cache-hit != 'true'
        run: |
          cargo install sccache --version ${SCCACHE_VERSION} --no-default-features --features=gha
      - name: Save sccache binary
        uses: actions/cache/save@v3
        if: steps.sccache_bin_restore.outputs.cache-hit != 'true'
        with:
          path: ~/.cargo/bin/sccache
          key: sccache-bin-${{ env.SCCACHE_VERSION }}-${{ env.SCCACHE_C_CUSTOM_CACHE_BUSTER }}

      - name: Configure sccache
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      - name: Restore verilator dir
        uses: actions/cache/restore@v3
        id: verilator_restore
        with:
          path: /opt/verilator
          key: verilator-${{ env.VERILATOR_VERSION }}-${{ env.SCCACHE_C_CUSTOM_CACHE_BUSTER }}

      - name: Install verilator
        if: steps.verilator_restore.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install flex bison libfl2 libfl-dev help2man
          cd /tmp/
          git clone -b "${VERILATOR_VERSION}" https://github.com/verilator/verilator
          cd verilator
          autoconf
          ./configure --prefix=/opt/verilator CXX="sccache g++"
          make -j6
          sudo make install
      - name: Save verilator dir
        uses: actions/cache/save@v3
        if: steps.verilator_restore.outputs.cache-hit != 'true'
        with:
          path: /opt/verilator
          key: verilator-${{ env.VERILATOR_VERSION }}-${{ env.SCCACHE_C_CUSTOM_CACHE_BUSTER }}

      - name: Setup verilator path
        run: |
          echo /opt/verilator/bin >> $GITHUB_PATH

      - name: Restore Risc V Toolchain
        uses: actions/cache/restore@v3
        id: riscv_restore
        with:
          path: /opt/riscv
          key: riscv-${{ env.RISCV_VERSION }}-${{ env.SCCACHE_C_CUSTOM_CACHE_BUSTER }}

      - name: Install Risc V Toolchain
        if: steps.riscv_restore.outputs.cache-hit != 'true'
        run: |
          # Building from source takes around 6.65 GB of disk and download size
          wget -O toolchain.tar.gz https://github.com/stnolting/riscv-gcc-prebuilt/releases/download/rv64imc-3.0.0/riscv64-unknown-elf.gcc-12.1.0.tar.gz
          mkdir /opt/riscv
          tar -xzf toolchain.tar.gz -C /opt/riscv/

      - name: Save riscv dir
        uses: actions/cache/save@v3
        if: steps.riscv_restore.outputs.cache-hit != 'true'
        with:
          path: /opt/riscv
          key: riscv-${{ env.RISCV_VERSION }}-${{ env.SCCACHE_C_CUSTOM_CACHE_BUSTER }}

      - name: Setup verilator path
        run: |
          echo /opt/riscv/bin >> $GITHUB_PATH

      - name: Run Caliptra Verilator Smoke Test
        run: |
          # TODO: Add the run_verilator_l0_regression.py script.
          # Running a simple test to make sure that there aren't any elaboration issues
          WORKSPACE=$(pwd)
          # TODO: Remove this sed command when the Caliptra directory is removed from caliptra_top_tb.vf
          sed -i 's/Caliptra\///g' src/integration/config/caliptra_top_tb.vf
          cd tools/scripts
          make verilator WORKSPACE=$WORKSPACE TESTNAME=smoke_test_kv_uds_reset
