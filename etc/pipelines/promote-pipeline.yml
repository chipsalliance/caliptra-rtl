# Copyright (C) Microsoft Corporation. All rights reserved.

trigger: none

# Point to another repository for the pipeline template
resources:
  repositories:
  - repository: templates
    type: git
    name: Ether/pipelines
variables:
- group: AHA_POC_Pipelines

stages:
- template: etc/pipelines/templates/promote-pipeline-template.yml@templates  # Template reference
  parameters:
    project: 'AHA_POC'
    repo_url: 'git@ssh.dev.azure.com:v3/ms-tsd/AHA_POC/Caliptra'
    target_branch: 'master'
    legal_header: false
    legal_header_warning: false

    build_and_sim_map:
    - integration_top_vcs:
      - display_name: 'Build integration_lib with VCS'
      - enabled: true
      - configspec_name: 'integration_lib'
      - dut: 'caliptra_top_tb'
      - args: ''
      - timeout: 30
      - testsuites:
        - l0_regress:
          - enabled: true
          - configspec_name: 'integration_lib'
          - dut: 'caliptra_top_tb'
          - timeout: 20
          - path: 'Caliptra/src/integration/stimulus/L0_regression.yml'

    - integration_top_ius:
      - display_name: 'Build integration_lib with IUS/Xcelium'
      - enabled: false
      - configspec_name: 'integration_lib'
      - dut: 'caliptra_top'
      - args: '--tool ius --targets packages rtl elab --options rtl="+define+TSD_DISABLE_ASSERTIONS"'
      - timeout: 10

    design_lint_map:
    - caliptra_top_sglint:
      - enabled: true
      - configspec_name: 'integration_lib'
      - dut: 'caliptra_top'
      - lint_tool: 'sglint'
      - timeout: 30
      - args: '--inherit-waivers=True'

    dv_lint_map:
    - caliptra_top_tb:
      - enabled: false
      - configspec_name: 'integration_lib'
      - dut: 'caliptra_top_tb'
      - timeout: 10

    top_repo: ''

    additional_test_steps:
      - file_list_check:
        - display_name: 'FILE LIST CHECK'
        - enabled: true
        - run_in_workspace: True
        - timeout: 60
        - commands:
            - 'set -e'
            - 'cd \$AHA_POC_REPO'

            # Run the Filelist generator script
            - 'bash \$AHA_POC_REPO/tools/scripts/gen_pb_file_lists.sh'

            # Check for any file changes
            - 'if [[ \$(git status -s --untracked-files=all --ignored=traditional | grep \"\\.vf\" | wc -l) -gt 0 ]]; then
                 echo \"Regenerating VF file lists produced some file changes:\";
                 git status -s --untracked-files=all --ignored=traditional | grep \"\\.vf\";
                 git diff;
                 echo \"*****************************************\";
                 echo \"Review above changes locally and resubmit pipeline\";
                 echo \"(Hint: Check \$AHA_POC_REPO for the above changes)\";
                 echo \"*****************************************\";
                 exit 1;
               fi'
      - html_doc_check:
        - display_name: 'HTML DOC CHECK'
        - enabled: true
        - run_in_workspace: True
        - timeout: 5
        - commands:
            - 'set -e'
            - 'module load tools/python/python3/3.9.2'
            - 'cd \$AHA_POC_REPO'

            # Run the HTML Doc generator script
            - 'bash \$AHA_POC_REPO/tools/scripts/reg_doc_gen.sh'

            # Timestamp is always updated in index.html, resulting in 3 line changes, so ignore it
            # Cleanup repo by clobbering the timestamp changes to index.html
            - 'if [[ \$(git diff --numstat -- \$AHA_POC_REPO/src/integration/docs/caliptra_reg_html/index.html | sed \"s/^\(\w\+\).*/\1/\") -eq 3 ]]; then
                 echo \"index.html has only 3 changes after regeneration, which means only the timestamp was updated. Reverting changes.\";
                 git restore \$AHA_POC_REPO/src/integration/docs/caliptra_reg_html/index.html;
               fi'

            # Check for any file changes
            - 'if [[ \$(git status -s --untracked-files=all --ignored=traditional -- \$AHA_POC_REPO/src/integration/ | wc -l) -gt 0 ]]; then
                 echo \"Regenerating HTML Reg documentation produced some file changes:\";
                 git status -s --untracked-files=all --ignored=traditional -- \$AHA_POC_REPO/src/integration/;
                 git diff -- \$AHA_POC_REPO/src/integration/;
                 echo \"*****************************************\";
                 echo \"Review above changes locally and resubmit pipeline\";
                 echo \"(Hint: Check \$AHA_POC_REPO for the above changes)\";
                 echo \"*****************************************\";
                 exit 1;
               fi'
      - license_header_check:
        - display_name: 'LICENSE_HEADER_CHECK'
        - enabled: true 
        - run_in_workspace: True
        - timeout: 5
        - commands: 
          - 'set -e'
          - 'cd \$AHA_POC_REPO'

          # Run the license checker script
          - 'bash \$AHA_POC_REPO/tools/scripts/licenseHeaderCheck.sh'

#      - verilator_smoke_test:
#        - display_name: 'Verilator Smoke Test'
#        - enabled: true
#        - run_in_workspace: True
#        - timeout: 30
#        - commands:
#            - 'set -e'
#            - 'module load tools/python/python3/3.9.2'
#
#            # Run the default Verilator test and dump a log
#            #- 'submit -i make -C \$AHA_POC_REPO/tools/scripts/tmp_verilator_run_dir -f ../Makefile verilator |& tee \$AHA_POC_REPO/tools/scripts/tmp_verilator_run_dir/verilate.log'
#            - 'submit -i python3 \$AHA_POC_REPO/tools/scripts/run_verilator_l0_regression.py'
#
#            # Check the result
##            - 'echo \"exiting with status \$STS\"'
##            - 'exit \$STS'
##            # Check the result
##            - 'if [[ \$(grep \"TESTCASE PASSED\" \$AHA_POC_REPO/tools/scripts/tmp_verilator_run_dir/verilate.log | wc -l) -gt 0 ]]; then
##                 echo \"Successful verilator run\";
##               else
##                 echo \"Verilator run was unsuccessful - did not observed TESTCASE PASSED message\";
##                 exit 1;
##               fi'
