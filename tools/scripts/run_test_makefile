#!/usr/bin/env bash
#
# SPDX-License-Identifier: Apache-2.0
# 
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Description:  This script will call various scripts from SVC Dvinfra to create a bifrost test
# Assumptions:
#   * This script is being called by playbook sim-tools before the sim executable.
#   * First attempt to use info from sim_config.cfg, if not,
#   * sim-tools will set several key environment variables (SIM_COLLATERAL_*), attempt to use those
#   * The configuration (config) MUST match the provider (tb) name

SCRIPT=`basename "$0"`
SCRIPT=${SCRIPT^^}
SCRIPT_DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

CONFIG=""

function parse_sim_config {
  echo "** IN parse_sim_config **"
  file=$1
  eval "$(python3w $SCRIPT_DIR/sim_config_parse.py $file)"
  if [[ ! -z "${other[tb]+x}" ]]; then
    CONFIG=${other[tb]}
    echo "CONFIG=$CONFIG"
  fi
  # Get testname from sim_config
  if [[ ! -z "${other[testname]}" ]]; then
    export TESTNAME=${other[testname]}
    echo "TESTNAME=$TESTNAME"
  fi
}

echo
set -e
full_pwd=`pwd -P`
sim_config_file=${full_pwd}/sim_config.yml

if [[ -f "$sim_config_file" ]]; then
    parse_sim_config $sim_config_file
fi

#remove random SEED from TESTNAME after "__" characters
baseTestName=$(echo "$TESTNAME" | sed 's/\__.*//')

echo "[$SCRIPT] Building TEST=$baseTestName from TESTNAME=$TESTNAME for CONFIG=${CONFIG}"
export TESTNAME=$baseTestName

# These bash functions cause the Makefile to not work, because it resets env vars and it chokes on the bash functions
unset -f module
unset -f switchml
unset -f _module_raw

# This is the UVM-based ROM test
if [[ $TESTNAME == "caliptra_top_rom_test" ]]; then
    cmd="make -f $SCRIPTS_DIR/Makefile TESTNAME=fw_test_rom program.hex"
    echo "$cmd"
    $cmd
# This is any other UVM-based test in caliptra_top bench
elif [[ ! -z $(echo $TESTNAME | grep -E "caliptra_top_\w*_test") ]]; then
    cmd="make -f $SCRIPTS_DIR/Makefile TESTNAME=caliptra_top program.hex"
    echo "$cmd"
    $cmd
    cmd="make -f $SCRIPTS_DIR/Makefile TESTNAME=caliptra_fmc caliptra_fmc.hex"
    echo "$cmd"
    $cmd
    cmd="make -f $SCRIPTS_DIR/Makefile TESTNAME=caliptra_rt  caliptra_rt.hex"
    echo "$cmd"
    $cmd
# This is any other FW-based smoke test running on the basic caliptra top SV bench
else
    cmd="make -f $SCRIPTS_DIR/Makefile program.hex"
    echo "$cmd"
    $cmd
fi
